"use strict";(self.webpackChunkgamedevforge=self.webpackChunkgamedevforge||[]).push([[1326],{7810:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>h,contentTitle:()=>c,default:()=>m,frontMatter:()=>l,metadata:()=>d,toc:()=>u});var n=t(4848),i=t(8453);t(6540);var r=t(6450);const s="video_mhkP",a=e=>{let{link:o}=e;return(0,n.jsx)("iframe",{src:o,className:s,frameborder:"0",allow:"autoplay; encrypted-media",allowfullscreen:!0})},l={description:"Introduction to source control and git.",tags:["Introduction","Source Control","Git","GitHub","Beginner"],slug:"/source-control",sidebar_position:3},c="Source Control",d={id:"source-control",title:"Source Control",description:"Introduction to source control and git.",source:"@site/docs/source-control.mdx",sourceDirName:".",slug:"/source-control",permalink:"/docs/source-control",draft:!1,unlisted:!1,tags:[{label:"Introduction",permalink:"/docs/tags/introduction"},{label:"Source Control",permalink:"/docs/tags/source-control"},{label:"Git",permalink:"/docs/tags/git"},{label:"GitHub",permalink:"/docs/tags/git-hub"},{label:"Beginner",permalink:"/docs/tags/beginner"}],version:"current",sidebarPosition:3,frontMatter:{description:"Introduction to source control and git.",tags:["Introduction","Source Control","Git","GitHub","Beginner"],slug:"/source-control",sidebar_position:3},sidebar:"modulesSidebar",previous:{title:"Modules Overview",permalink:"/docs/modules-overview"},next:{title:"Java",permalink:"/docs/category/java"}},h={},u=[{value:"Key Concepts",id:"key-concepts",level:3},{value:"Repository:",id:"repository",level:4},{value:"Commits:",id:"commits",level:4},{value:"Branches:",id:"branches",level:4},{value:"Merge:",id:"merge",level:4},{value:"Conflict Resolution:",id:"conflict-resolution",level:4},{value:"GitHub",id:"github",level:2},{value:"How does it Work?",id:"how-does-it-work",level:3},{value:"What is a Repository on GitHub?",id:"what-is-a-repository-on-github",level:3},{value:"Conclusion",id:"conclusion",level:2}];function p(e){const o={a:"a",admonition:"admonition",br:"br",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",mermaid:"mermaid",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.h1,{id:"source-control",children:"Source Control"}),"\n",(0,n.jsx)(o.admonition,{type:"note",children:(0,n.jsx)(o.p,{children:"This is not a coverage of all features of source control. It is simply an introduction to them."})}),"\n",(0,n.jsx)(o.p,{children:"Source control, also known as version control, is a system that manages changes to files over time, particularly in software development projects. It keeps files synchronized between multiple\r\ndevelopers working in the same codebase while providing a historical view of the progression of a project."}),"\n",(0,n.jsx)(o.p,{children:"Imagine you're working on a 2D game project, and you end up with a large number of files in a project. Picture a scenario where you are doing this without source control,\r\nbut disaster strikes \u2013 your hard drive crashes, and your project vanishes into thin air."}),"\n",(0,n.jsx)(o.p,{children:"Without source control in place, there is no way to recover it. You may have planned for this in other ways like backing up the hard drive or project manually,\r\nbut how often would you do this? You will always run the risk of losing progress without some form of source control. The same scenario presents itself when\r\nyou had a feature working a certain way but removed it as it was no longer needed, this workflow is destructive in general."}),"\n",(0,n.jsx)(o.p,{children:"Now picture working within a team of people, without source control, co-ordinating efforts, and consolidating changes from different contributors becomes\r\na huge pain. Just having to manually merge the file changes yourself would have a host of its own issues. Ultimately this would lead to inconsistencies, conflicts, and lost progress."}),"\n",(0,n.jsxs)(o.p,{children:["This is where source control steps in and saves the day. It will track any modifications made to any files living in a ",(0,n.jsx)(r.A,{text:"Repository"}),".\r\nIn this case, it's the version of your project that lives on GitHub. Your local version of the project is a copy.\r\nIt's important to understand that as you are changing the contents of files, the source control detects local changes that differ from its own.\r\nThese local changes can be synced with the repository (uploaded and downloaded), adding a new version of each file that has changed."]}),"\n",(0,n.jsx)("p",{children:"\xa0"}),"\n",(0,n.jsx)("div",{align:"center",children:(0,n.jsx)(o.mermaid,{value:"\r\nflowchart-elk\r\nA([Working Copy #1]);\r\nB([Working Copy #2]);\r\nC([Working Copy #3]);\r\nD(Repository);\r\nA---\x3e |Commit & Push| D;\r\nD<---\x3e |Update| A;\r\nD<---\x3eB;\r\nD<---\x3eC;\r\n"})}),"\n",(0,n.jsx)("p",{children:"\xa0"}),"\n",(0,n.jsx)(o.h3,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,n.jsx)(o.h4,{id:"repository",children:"Repository:"}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsx)(o.li,{children:"A repository, or repo, is a central location where all project files and their version history are stored."}),"\n"]}),"\n",(0,n.jsx)(o.h4,{id:"commits",children:"Commits:"}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsx)(o.li,{children:"A snapshot of the project or file at a specific point in time. When a developer makes changes to files, they create a commit to record those changes along with a descriptive message explaining the modifications."}),"\n"]}),"\n",(0,n.jsx)(o.h4,{id:"branches",children:"Branches:"}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsx)(o.li,{children:"Branches are snapshots that represent different states of a repository. Developers can create branches to work on new features or experiments without affecting the main codebase. Once the changes are tested and/or approved,\r\nthey can be merged back into the main branch."}),"\n"]}),"\n",(0,n.jsx)(o.h4,{id:"merge",children:"Merge:"}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsx)(o.li,{children:"Merging is the process of combining changes from one branch into another. When a feature is complete and tested, developers merge the changes from their feature branch into the main branch."}),"\n"]}),"\n",(0,n.jsx)(o.h4,{id:"conflict-resolution",children:"Conflict Resolution:"}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsx)(o.li,{children:"Conflicts may arise when multiple developers modify the same file simultaneously. Source control systems provide mechanisms to identify and resolve these conflicts."}),"\n"]}),"\n",(0,n.jsxs)(o.p,{children:["These are just a few areas that source control can be useful in, but we haven't even scratched the surface.",(0,n.jsx)(o.br,{}),"\n","As you complete modules you will build on this initial knowledge and gain a much deeper understanding of source control through practical use."]}),"\n",(0,n.jsx)(o.h2,{id:"github",children:"GitHub"}),"\n",(0,n.jsxs)(o.p,{children:["GitHub is a platform built on top of ",(0,n.jsx)(r.A,{text:"Git"}),". It extends the capabilities of Git to facilitate collaboration and project management.\r\nGitHub provides a centralized repository for managing changes to files over time, allowing multiple developers to work together on the same codebase seamlessly.\r\nIt acts as a secure free cloud storage for your project files, eliminating the risk of losing progress while avoiding a destructive workflow."]}),"\n",(0,n.jsxs)(o.p,{children:["It provides web-based interfaces that allow developers to visualize project history, track modifications to files, and manage project milestones easily.\r\nBy leveraging GitHub, developers can synchronize their local copies of the project with the remote ",(0,n.jsx)(r.A,{text:"repository"}),",\r\nensuring that all changes are accurately tracked."]}),"\n",(0,n.jsxs)(o.p,{children:["GitHub's popularity stems from its user-friendly interface and large community. It isn't targeted directly at a specific area of software development but rather encompases them all.\r\nThis attracts a diverse range of developers and projects to the platform. Another cool fact is that GitHub hosts the largest collection of ",(0,n.jsx)(r.A,{text:"open-source"})," code on the internet."]}),"\n",(0,n.jsx)(o.h3,{id:"how-does-it-work",children:"How does it Work?"}),"\n",(0,n.jsxs)(o.p,{children:["To get started with GitHub, you first need to create an account by visiting the ",(0,n.jsx)(o.a,{href:"https://github.com/",children:"GitHub"})," website and signing up with your email address.\r\nOnce you've created an account, you can customize your profile with information about yourself and from there it's a case of creating a repository for an active project your working on."]}),"\n",(0,n.jsx)(o.h3,{id:"what-is-a-repository-on-github",children:"What is a Repository on GitHub?"}),"\n",(0,n.jsx)(o.p,{children:"A repository is a storage space where all the files and data associated with a project are stored and managed. It serves as a container for organizing, versioning, and\r\ncollaborating on software development projects. Each repository on GitHub typically represents a single project, such as a software application,\r\na game or even a website like this one (which is actually hosted on GitHub)."}),"\n",(0,n.jsx)(o.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,n.jsxs)(o.p,{children:["GitHub is not the only source control around, in later modules we will discuss ",(0,n.jsx)(r.A,{text:"Perforce"})," which follows the same principles but with some key differences that make it more useful for\r\nlarger teams and projects that contain files that cannot be merged. Another worthy mention is ",(0,n.jsx)(r.A,{text:"GitLab"}),", which you can actually host a version of privately which comes with it's\r\nown benefits."]}),"\n",(0,n.jsx)(o.p,{children:"You should now understand why source control systems are an important part of the development process.\r\nAgain we have just scraped the surface here and we will be developing practical skills for everything discussed and more throughout the modules."}),"\n",(0,n.jsxs)(o.p,{children:["As a next step, I would highly recommend anyone starting out to watch this video from Kevin Stratvert.",(0,n.jsx)(o.br,{}),"\n","It is split up with time-stamps but is worth a watch if you want a more in-depth explanation on key areas."]}),"\n",(0,n.jsx)("p",{children:"\xa0"}),"\n",(0,n.jsx)(a,{link:"https://www.youtube.com/embed/tRZGeaHPoaw"}),"\n",(0,n.jsx)("p",{children:"\xa0"})]})}function m(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},6450:(e,o,t)=>{t.d(o,{A:()=>c});var n=t(6540);const i="tooltipContainer_klWT",r="tooltipBox_kLVV",s="textBox_o4OJ",a={"hello-world":"hello-world is a simple program used to introduce syntax, environment setup, and output functionality",gitbash:"GitBash is a terminal emulator for Git on Windows, facilitating version control and command-line operations",sourcetree:"SourceTree is a graphical Git client used for managing repositories, simplifying version control workflows visually",directx:"DirectX is an API framework facilitating advanced 3D graphics rendering for Windows, Xbox and Linux",vulkan:"Vulkan is a cross-platform API framework for high-performance 3D graphics rendering","data driven development":"Data-Driven Development is an approach where functionality is based on data, iterative development, and easy modification to empower designers","source control":"Source Control is a system managing changes to code, enabling collaboration, tracking history, and ensuring versioning",debugging:"Debugging in an IDE allows developers to identify and fix software issues efficiently with integrated tools",perforce:"Perforce is a version control system facilitating collaborative software development, particularly in game development environments",repository:"A repository, or repo, is a central location/database where all project files and their version history are stored",git:"Git is an open source control system for tracking changes in source code during software development",gitlab:"GitLab unlike GitHub is open-source, it is a web-based source control system",github:"A web-based platform for version control using Git, facilitating collaboration, code sharing, and project management among software developers","open-source":"Open-source software is publicly accessible code that can be freely inspected, modified, and distributed",ide:"IDE stands for Integrated Development Environment, they provide developers with tools for writing, debugging, and testing code","code completion":"Code Completion is a feature in IDEs that automatically suggests and completes code, variable names, methods, and other elements as you type","c++":"An advanced programming language, known for its high performance and low-level control, making it ideal performance-critical applications","c#":"A modern programming language developed by Microsoft, known for its strong support for object-oriented programming and its rich set of features",java:"A high-level, object-oriented programming language. Known for its simplicity, platform independence, and robustness",api:"Application Programming Interface, which provides a set of pre-defined functions, classes, and protocols. Streamlining the development process and promoting code reuse",jvm:"Java Virtual Machine, is an abstract computing machine that enables Java code to be executed regardless of platform",console:"A text-based interface for user-computer interaction, enabling text input and output, often used for program execution, system monitoring, and debugging","program arguments":"Flags or values that you can pass into an application. Can be viewed as inputs that can enable/disable certain features or functionality of an application","environment variables":"Variables that are part of the operating systems environment. They store information such as paths to important directories, system configurations, or user preferences",variable:"A symbolic name that represents a stored value in code",class:"A container defining variables and functionality to serve a specific purpose in an application or feature",abstraction:"The process of simplifying complex systems by focusing on essential properties while hiding unnecessary details",inheritance:"A feature of object-oriented programming where a new class inherits properties and behaviors (methods) from a given class",polymorphism:"A feature of object-oriented programming where different classes can be treated interchangeably, allowing flexible method behaviors that can be overridden in a hierarchical class structure",signed:"Signed data types reserve one bit to represent the sign of the value, allowing for both positive and negative values",unsigned:"Unsigned data types use all bits to represent the only positive values",operators:"Operators are symbols that perform operations on operands. They can be arithmetic (like +, -, *, /), relational (like ==, !=, >, <), logical (like &&, ||), and more",scope:"Scopes determine where a variable or a function can be accessed. There are two main types of scope: local and global","class instance":"A single occurrence of an object, created from a class. It has its own properties and methods",refactor:"Process of improving code structure without altering its functionality for better readability and maintainability"};var l=t(4848);const c=e=>{let{text:o,info:t}=e;const[c,d]=(0,n.useState)(!1),[h,u]=(0,n.useState)({x:0,y:0}),p=a[o.toLowerCase()],m=t||p||"Missing tool-tip!";let g=h.x+20+"px";if("undefined"!=typeof window&&h.x+20>window.innerWidth-300){let e=h.x/window.innerWidth;g=h.x-200*e+"px"}const f={position:"fixed",top:h.y+20+"px",left:g};return(0,l.jsxs)("span",{className:i,onMouseEnter:()=>{d(!0)},onMouseLeave:()=>{d(!1)},onMouseMove:e=>{u({x:e.clientX,y:e.clientY})},children:[(0,l.jsx)("code",{className:s,children:o}),c&&(0,l.jsx)("div",{className:r,style:f,children:m})]})}},8453:(e,o,t)=>{t.d(o,{R:()=>s,x:()=>a});var n=t(6540);const i={},r=n.createContext(i);function s(e){const o=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(r.Provider,{value:o},e.children)}}}]);